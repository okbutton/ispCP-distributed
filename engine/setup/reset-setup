#!/usr/bin/perl

# ISPCP Ï‰ (OMEGA) - Virtual Hosting Control System | Omega Version
# Copyright (c) 2006-2007 by ispCP | http://isp-control.net
#
#
# License:
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GPL General Public License
#    as published by the Free Software Foundation; either version 2.0
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GPL General Public License for more details.
#
#    You may have received a copy of the GPL General Public License
#    along with this program.
#
#    An on-line copy of the GPL General Public License can be found
#    http://www.fsf.org/licensing/licenses/gpl.txt
#
########################################################################
#
# This Script only resetts the ISPCP Setup, it WON'T uninstall ISPCP!!
# Afterwards a new install is possible. Use it, if you had an installation
# error during setup.
#
# Keep attention: The ISPCP database will be deleted with all its content!
#
########################################################################

use FindBin;
use lib "$FindBin::Bin/..";
require 'ispcp_common_code.pl';
use strict;
use warnings;

## Variables
my ($rs, $sql, $rdata)	= (undef, undef, undef);
my $user_prefix = $main::cfg{'APACHE_SUEXEC_USER_PREF'};
my $master_user = $main::cfg{'APACHE_SUEXEC_MIN_UID'};
my $user_delete	= $main::cfg{'CMD_USERDEL'};
my $database	= $main::cfg{'DATABASE_NAME'};

## MAIN
print STDOUT "Re-setting ISPCP Setup!\n";
print STDOUT "========================\n";
my $delete_cmd = "$user_delete -r $user_prefix$master_user";
$rs = sys_command($delete_cmd);

my $delete_fcgi = "$main::cfg{'CMD_RM'} -r $main::cfg{'PHP_STARTER_DIR'}/master";
$rs = sys_command($delete_fcgi);

$sql = "DROP DATABASE IF EXISTS $database";
($rs, $rdata) = doSQL($sql);
if ($rs != 0) {
	print STDOUT "An error occured!\n";
	print STDOUT "$rdata\n";
}
else {
	print STDOUT "done!\n";
}
