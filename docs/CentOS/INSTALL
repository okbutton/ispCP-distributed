ispCP Ï(OMEGA) HowTo Install for CentOS 5.2
================================================================================
For other Linux distributions please check the other INSTALL files.
================================================================================

Table of Content
================
1) Version Info
2) Requirements
3) Introduction
4) Installation
5) Update
6) Credits

================================================================================
1) Version Info
---------------
ispCP ÏVersion:        1.0.0 RC6
INSTALL Script:        1.1
Maintainer:
Homepage:              http://isp-contol.net
Linux Distros:         CentOS 5.2

================================================================================
2) Requirements
---------------
There is no must have for a system using ispCP Ï This is only a recommendation:

Pentium III or K6-4 with 500 MHz
512 MB RAM
100 MB disk space (only for install of ispCP Ï
Debian (or even any other *NIX-Distribution)

All required packages are listed in ./docs/CentOS

================================================================================
3) Introduction
---------------
ispCP Ïdelivers a complete hosting automation appliance by offering significant
security, total-cost-of-ownership, and performance advantages over competing
commercial solutions.

With ispCP Ïyou can configure your server and applications, create user with
domains with a few point-and-click operations that take less than a minute.
There is no limit to the number of resellers, users and domains that can be
created. The core of ispCP Ïare 3 easy-to-use, web-based control panels. ispCP
provides graphic user interfaces for the administrators, resellers and users.

================================================================================
4) Preparation
--------------
For the following steps, you will need to be logged in as root.

1. First, you will need to install the RPMForge repository for some of the
   packages required. It is recommended to follow the directions located at
   http://wiki.centos.org/Repositories/RPMForge, especially concerning the
   priorities plugin.

2. Next, make sure your system packages are updated. This is as simple as running:
        # yum update

3. You now need to disable SELinux, if it is enabled. You can do this by running
   the following command:
        # setenforce 0
   Now, you will want to make sure it is off for future boots. Set "SELINUX" to
   "disabled" by editing /etc/selinux/config.

4. Untar or unzip the distribution files to a secure directory:
        # cd /root
        # tar xjvf ispcp-omega-1.0.0-rc6.tar.bz2

5. Change to the newly created directory:
        # cd ./ispcp-omega-1.0.0

6. Next, install the software packages we need. A list is conveniently provided
   and can be used to install by running the following:
        # yum install `cat ./docs/CentOS/centos-packages`
   After that, we need to install a few perl modules that aren't packaged. You
   can run the following command to install them:
        # cat ./docs/CentOS/centos-perl | xargs -I {} perl -MCPAN -e 'install {}'

   Note: If you've never run 'perl -MCPAN -e shell' before, you'll have to do this 
         first and answer 'no' to autoconfigure perl. 

7. Next, we add remi repository because Centos 5 ships with php 5.1.6 that do not work nice:

        # wget http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-2.noarch.rpm
        # wget http://rpms.famillecollet.com/el5.i386/remi-release-5-4.el5.remi.noarch.rpm
        # rpm -Uvh remi-release-5*.rpm epel-release-5*.rpm

   Then in /etc/yum.repos.d/remi.repo add 
   Edit the  /etc/yum.repos.d/remi.repo files in /etc/yum.repos.d/ and set up priorities 
   by adding the line:

        priority=1

   to a repository entry. Do same thing to /etc/yum.repos.d/epel.repo and /etc/yum.repos.d/epel-testing.repo
   Next lets update php:

        # yum --enablerepo=remi update php*

8. Now, remove Sendmail so Postfix will be the default MTA

        # yum remove sendmail

9. Install the Courier IMAP server. Packages for this are not in the default
   repositories, but are available from third-party packagers such at at
   http://www.thatfleminggent.com/. The following three packages are the latest
   versions as of the last update, but you should check the package list at the
   previous site to make sure you have the latest versions.

        # wget http://www.thatfleminggent.com/packages/centos/5/i386/courier-authlib-0.60.6-1.el5.mf.i386.rpm
        # wget http://www.thatfleminggent.com/packages/centos/5/i386/courier-authlib-userdb-0.60.6-1.el5.mf.i386.rpm
        # wget http://www.thatfleminggent.com/packages/centos/5/i386/courier-imap-4.3.1-2.el5.mf.i386.rpm
        # rpm -i courier-authlib-0.60.6-1.el5.mf.i386.rpm
        # rpm -i courier-authlib-userdb-0.60.6-1.el5.mf.i386.rpm
        # rpm -i courier-imap-4.3.1-2.el5.mf.i386.rpm

  You will also need to do some minor configuration by adding a user and group
  for courier. The following commands will acomplish this:
        # groupadd courier -g 3000
        # useradd -u 3000 -c 'Courier Mail Server' -d /dev/null -g courier -s /bin/false courier

10. Now we need to configure MySQL. To do this, it must be running. To make sure
   it is running, run the following command:
        # service mysqld start
   After it starts, you can run the mysql_secure_installation script. This will
   set up MySQL with an administrator password and make sure any non-secure
   default items like the test database are removed. This is very important if
   the server will be for shared hosting.
        # /usr/bin/mysql_secure_installation
   Make sure to remember the root password for MySQL. You will need it later.

11. Install mod_fcgid. Packages for this are not in the default
    repositories, but are available from third-party packagers such at at
    http://centos.karan.org/. The following package are the latest
    versions as of the last update, but you should check the package list at the
    previous site to make sure you have the latest versions.

        # wget http://centos.karan.org/el5/extras/testing/i386/RPMS/mod_fcgid-2.2-4.el5.kb.i386.rpm
        # rpm -i mod_fcgid-2.2-4.el5.kb.i386.rpm

12. Remove all files from /etc/httpd/conf.d

        # rm -f /etc/httpd/conf.d/*
================================================================================
4) Installation
---------------
For the following steps, you will need to be logged in as root and MySQL will
need to be running.

1. (optional) Check the ispcp.conf and adapt it to your requirements.

2. Build the System by using make:
        # make -f Makefile.centos install

3. Copy all the directories into your system (you may make backups)
        # cp -RLf /tmp/ispcp/* /
        # cp -Rv /tmp/ispcp/etc/init.d /etc/rc.d/
        # ln -s /etc/rc.d/init.d /etc/init.d
        # mkdir /var/mail/virtual

4. Now, setup some items for BIND configuration:
        # mv /var/named/data /var/named/data2
        # ln -s /var/named/chroot/var/named/data /var/named/data
        In file /var/named/chroot/etc/named.caching-nameserver.conf after line:
                include "/etc/named.rfc1912.zones";
        add
                include "/etc/named-ispcp.conf";
        Modify /var/named/chroot/etc/named.caching-nameserver.conf according your needs (default it binds only to localhost)

5. Next, we create the SASL database directory and link the configuration for
   Postfix
        # touch /etc/sasldb2
        # mkdir -p /var/spool/postfix/etc
        # cp /etc/sasldb2 /var/spool/postfix/etc/sasldb2

   Now, edit /usr/lib/sasl2/smtpd.conf to use the SASL database. Replace the
   contents of that file with the following:
        pwcheck_method: auxprop
        auxprop_plugin: sasldb
        mech_list: PLAIN LOGIN CRAM-MD5 DIGEST-MD5

6. A little bit of Apache configuration is needed:

        # echo 'include vhosts/*.conf' >> /etc/httpd/conf/httpd.conf

        # chown apache:apache /var/www/ispcp/gui/tools/webmail/data

7. Now it's time to set up the frontend. When prompted for fastcgi version select fcgid ( press "c").
   We need to change into the right directory and run the setup tool:
        # cd /var/www/ispcp/engine/setup
        # perl ispcp-setup

        If you get no error, all went good; if you get one, look at
        http://isp-control.net to solve the problem.

================================================================================
4) Post-Installation
--------------------
1. There is a bug in some versions of courier that prevent courier-authdaemon
   from stopping with the default service script. You will need to make an edit
   to fix this. Edit /etc/init.d/courier-authlib and
        change: ${libexecdir}/authlib/authdaemon stop
        into:   killall authdaemond.plain

2. Modify some system values:
        # chmod 777 /var/www/ispcp/gui/phptmp

        * Install Daemon:
        # chkconfig --add ispcp_daemon
        # chkconfig --add ispcp_network
        # chkconfig --levels 345 ispcp_daemon on
        # chkconfig --levels 345 ispcp_network on
        # service ispcp_daemon start
        # service ispcp_network start

3. Clean the temporary folders:
        # rm -R /tmp/ispcp

================================================================================
5) Update
---------
For the following steps, you will need to be logged in as root and MySQL will
need to be running.

1. Untar or unzip the distribution files to a secure directory:
    # cd /root
    # tar xjvf ispcp-omega-1.0.0-rc6.tar.bz2

2. Change to the newly created directory:
    # cd ./ispcp-omega-1.0.0

3. Next, install the software packages we need. A list is conveniently provided
   and can be used to install by running the following:
    # yum install `cat ./docs/CentOS/centos-packages`
   After that, we need to install a few perl modules that aren't packaged. You
   can run the following command to install them:
    # cat ./docs/CentOS/centos-perl | xargs -I {} perl -MCPAN -e 'install {}'

4. (optional) Check the ispcp.conf and adapt it to your requirements.
5. Build the System by using make:
    # make -f Makefile.centos install

6. Save files
    # cp -v /var/www/ispcp/engine/ispcp-db-keys.pl /tmp/ispcp/var/www/ispcp/engine/
    # cp -v /var/www/ispcp/engine/messager/ispcp-db-keys.pl /tmp/ispcp/var/www/ispcp/engine/messager/
    # cp -v /var/www/ispcp/gui/include/ispcp-db-keys.php /tmp/ispcp/var/www/ispcp/gui/include/
    # cp -v /var/www/ispcp/gui/themes/user_logos/* /tmp/ispcp/var/www/ispcp/gui/themes/user_logos/

   If updating from RC3 or higher:
    # cp -v /var/www/ispcp/gui/tools/pma/config.inc.php /tmp/ispcp/var/www/ispcp/gui/tools/pma/

7. Delete old files to avoid security risks:
	# rm -fR /var/www/ispcp/gui/{admin,client,include,orderpanel,themes,reseller}/
	# rm -fR /var/www/ispcp/gui/*.php

8. Copy /usr and /var directories into your system (you may make backups)
	# cp -Rv /tmp/ispcp/usr/* /usr/
	# cp -Rv /tmp/ispcp/var/* /var/

9. Backup ispcp.conf and copy the /etc directory into your system (you may make backups):
	# mv -v /etc/ispcp/ispcp.conf /etc/ispcp/ispcp.old.conf
	# cp -Rv /tmp/ispcp/etc/* /etc/

10. Now it's time to update your installation. Change into the engine directory:
	# cd /var/www/ispcp/engine/setup

11. Start the engine update:
	# perl ispcp-update

12. Update ispCP ω step-by-step

	If you get no error, all went good; if you get one, look at
	http://isp-control.net to solve the problem.

13. Clean the temporary folders:
	# rm -fR /tmp/ispcp/

================================================================================
6) Credits
----------

ispCP Ïis a project of ispCP | isp Control Panel.
Please visit our site under http://isp-control.net for further information on
ispCP Ï ispCP and other themes.

We hope you enjoy using ispCP Ï If you like it, help us, to make it better. We
would be glad on any help provided!
