#!/bin/bash

# ispCP Ï‰ (OMEGA) a Virtual Hosting Control System
# Copyright (c) 2007 by ispCP
# http://www.isp-control.net
#
#
# License:
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the MPL Mozilla Public License
#    as published by the Free Software Foundation; either version 1.1
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    MPL Mozilla Public License for more details.
#
#    You may have received a copy of the MPL Mozilla Public License
#    along with this program.
#
#    An on-line copy of the MPL Mozilla Public License can be found
#    http://www.mozilla.org/MPL/MPL-1.1.html
#
#
# The ispCP Home Page is at:
#
#    http://www.isp-control.net
### BEGIN INIT INFO
# Provides:             ispcp_network
# Required-Start:       $network $local_fs $remote_fs
# Required-Stop:
# Should-Stop:          $local_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    ispCP Network Traffic Logger
### END INIT INFO
# Note: do not modify any of these vars here, use /etc/default/$NAME instead

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="ispCP Network Traffic Logger"
NAME=ispcp_network
LFILE=/var/run/$NAME
IPTABLES=/sbin/iptables
LOGDIR=/var/log/ispcp
LOGFILE=${LOGDIR}/${NAME}.log
DIETIME=3
ENGINEPATH="/var/www/ispcp/engine"
ENGINETOOLSPATH=${ENGINEPATH}"/tools"
NETWORKCARDMANAGER="ispcp-net-interfaces-mngr"

START=1

# To monitor more ports, edit SERVICES variable add your own ports
# (ftp, proxy, http, etc.)
SERVICES=(
	# Web traffic
		80 	443
	# Pop 3
		110
	# IMAP
		143
	# Mail
		25 587 995 993
)

# Debian LSB extensions (will be used if init-functions doesn't override them):
log_daemon_msg() {
	if [ ! -z "${2:-}" ]; then
		log_success_msg "${1:-}: ${2:-}"
	else
		log_success_msg "${1:-}"
	fi
}
log_end_msg() {
	local status="$1"
}
log_progress_msg () {
	log_success_msg " $@"
}

# if not present (e.g. *BSD) make sure to provide compatible methods via /etc/default/$NAME
if [ -f /lib/lsb/init-functions ]; then
	. /lib/lsb/init-functions
fi

# Read config file if present.
if [ -r /etc/default/$NAME ]; then
	. /etc/default/$NAME
fi

if [ $START -eq 0 ]; then
	log_warning_msg "Not starting $DESC: edit /etc/default/$NAME."
	exit 1
fi

add_rules() {
	${IPTABLES} -N ISPCP_INPUT 2>> "$LOGFILE"
	${IPTABLES} -N ISPCP_OUTPUT 2>> "$LOGFILE"

	# All traffic should jump through ISPCP tables before anything else
	${IPTABLES} -I INPUT -j ISPCP_INPUT 2>> "$LOGFILE"
	${IPTABLES} -I OUTPUT -j ISPCP_OUTPUT 2>> "$LOGFILE"

	# Services from matrix
	for PORT in ${SERVICES[@]}; do
		${IPTABLES} -I ISPCP_INPUT  -p tcp --dport "$PORT" 2>> "$LOGFILE"
		${IPTABLES} -I ISPCP_OUTPUT -p tcp --sport "$PORT" 2>> "$LOGFILE"
	done

	# Explicit return once done
	${IPTABLES} -A ISPCP_INPUT -j RETURN
	${IPTABLES} -A ISPCP_OUTPUT -j RETURN

	# Touch lock file
	touch $LFILE
}

remove_rules() {
	${IPTABLES} -D INPUT -j ISPCP_INPUT 2>> "$LOGFILE"
	${IPTABLES} -D OUTPUT -j ISPCP_OUTPUT 2>> "$LOGFILE"
	${IPTABLES} -F ISPCP_INPUT 2>> "$LOGFILE"
	${IPTABLES} -F ISPCP_OUTPUT 2>> "$LOGFILE"
	${IPTABLES} -X ISPCP_INPUT 2>> "$LOGFILE"
	${IPTABLES} -X ISPCP_OUTPUT 2>> "$LOGFILE"

	# Remove lock file
	rm $LFILE
}

add_interfaces(){
	${ENGINETOOLSPATH}/${NETWORKCARDMANAGER} start &>${LOGDIR}/${NETWORKCARDMANAGER}.log 2>&1
}

remove_interfaces(){
	${ENGINETOOLSPATH}/${NETWORKCARDMANAGER} stop &>${LOGDIR}/${NETWORKCARDMANAGER}.log 2>&1
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME"

	if [ -e "$LFILE" ]; then
		echo ""
	   	log_warning_msg "${NAME} is already started" >&2
	else
		add_interfaces
		add_rules
	fi

	log_end_msg $?
	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	if [ ! -e "$LFILE" ]; then
		echo ""
		log_warning_msg "${NAME} is already stopped" >&2
	else
		remove_rules
		remove_interfaces
	fi

	log_end_msg $?
	;;
  restart|force-reload)
	log_daemon_msg "Stopping $DESC" "$NAME"

	if [ ! -e "$LFILE" ]; then
		echo ""
		log_warning_msg "${NAME} is already stopped" >&2
	else
		remove_rules
		remove_interfaces
		log_end_msg $?
		[ -n "$DIETIME" ] && sleep "$DIETIME"
	fi

	log_daemon_msg "Starting $DESC" "$NAME"

	add_interfaces
	add_rules

	log_end_msg $?

	;;
  status)
	log_daemon_msg "Checking status of $DESC" "$NAME"

	if [ ! -e "$LFILE" ]; then
	   log_progress_msg "stopped"
	else
	   log_progress_msg "started"
	fi

	echo ""
	;;
  *)
	echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
